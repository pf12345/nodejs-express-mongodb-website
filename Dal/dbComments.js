// Generated by CoffeeScript 1.8.0
(function() {
  var ObjectId, dbHelper, mongodb, mongojs, _;

  dbHelper = require('../helper/dbHelper');

  mongodb = dbHelper.newDb();

  mongojs = require('mongojs');

  _ = require("underscore");

  ObjectId = mongojs.ObjectId;


  /*
      添加评论
      info:
          qId 问题id
          user 用户内容
          content 评论内容
          replyNum 回复数量
          likeNum 赞数
          addTime 添加时间
   */

  exports.add = function(info, cb) {
    return dbHelper.connectDB("comments", cb, function(collection) {
      return collection.insert(info, {
        safe: true
      }, function(err, comment) {
        mongodb.close();
        if (err) {
          return cb(err);
        } else {
          return cb(null, comment);
        }
      });
    });
  };


  /*
      查找问题的相关评论
      qId 问题Id
   */

  exports.getAll = function(qId, cb) {
    return dbHelper.connectDB("comments", cb, function(collection) {
      return collection.find({
        qId: qId
      }).toArray(function(err, items) {
        mongodb.close();
        if (err) {
          return cb(new Error(err));
        } else {
          return cb(null, items);
        }
      });
    });
  };


  /*
      添加评论回复
      info:
          cId 评论id
          user 用户信息
          content 回复内容
          addTime 添加时间
   */

  exports.addReply = function(info, cb) {
    return dbHelper.connectDB("replies", cb, function(collection) {
      return collection.insert(info, {
        safe: true
      }, function(err, reply) {
        mongodb.close();
        if (err) {
          return cb(err);
        } else {
          return cb(null, reply);
        }
      });
    });
  };


  /*
      查找评论的相关回复
      cId 评论Id
   */

  exports.getAllReply = function(cId, cb) {
    return dbHelper.connectDB("replies", cb, function(collection) {
      return collection.find({
        cId: cId
      }).toArray(function(err, items) {
        mongodb.close();
        if (err) {
          return cb(new Error(err));
        } else {
          return cb(null, items);
        }
      });
    });
  };


  /*
      获取用户回答问题
   */

  exports.getCommentByUser = function(userId, cb) {
    return dbHelper.connectDB("comments", cb, function(collection) {
      return collection.find({
        "user.id": userId
      }).toArray(function(err, items) {
        var questions, questionsArr, questionsIdArr, times;
        mongodb.close();
        if (err) {
          return cb(new Error(err));
        } else if (items.length === 0) {
          return cb(null, []);
        } else {
          questionsIdArr = [];
          questionsArr = [];
          items.map(function(item) {
            if (questionsIdArr.indexOf(item.qId) === -1) {
              questionsIdArr.push(item.qId);
              return questionsArr.push(item);
            }
          });
          questions = [];
          times = 0;
          return dbHelper.connectDB("questions", cb, function(collection) {
            return questionsArr.map(function(item) {
              return collection.findOne({
                _id: ObjectId(item.qId)
              }, function(err, question) {
                if (!err && question) {
                  times++;
                  questions.push(question);
                  if (times === questionsArr.length) {
                    mongodb.close();
                    return cb(null, questions);
                  }
                } else {
                  return cb(new Error(err));
                }
              });
            });
          });
        }
      });
    });
  };


  /*
      修改回复数量
   */

  exports.changeReplyNum = function(commentId, cb) {
    return dbHelper.connectDB("comments", cb, function(collection) {
      return collection.findOne({
        _id: ObjectId(commentId)
      }, function(err, comment) {
        var replyNum;
        if (err) {
          return cb(new Error(err));
        } else {
          replyNum = comment.replyNum;
          replyNum++;
          return collection.update({
            _id: ObjectId(commentId)
          }, {
            $set: {
              replyNum: replyNum
            }
          }, function(err) {
            mongodb.close();
            if (err) {
              return cb(new Error(err));
            } else {
              return cb(null, 'ok');
            }
          });
        }
      });
    });
  };


  /*
      修改赞数量
   */

  exports.changeLikeNum = function(commentId, cb) {
    return dbHelper.connectDB("comments", cb, function(collection) {
      return collection.findOne({
        _id: ObjectId(commentId)
      }, function(err, comment) {
        var likeNum;
        if (err) {
          return cb(new Error(err));
        } else {
          likeNum = comment.likeNum;
          likeNum++;
          return collection.update({
            _id: ObjectId(commentId)
          }, {
            $set: {
              likeNum: likeNum
            }
          }, function(err) {
            mongodb.close();
            if (err) {
              return cb(new Error(err));
            } else {
              return cb(null, 'ok');
            }
          });
        }
      });
    });
  };

}).call(this);

//# sourceMappingURL=dbComments.js.map
