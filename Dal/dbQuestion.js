// Generated by CoffeeScript 1.7.1
(function() {
  var ObjectId, mongodb, mongojs;

  mongodb = require('./newDb');

  mongojs = require('mongojs');

  ObjectId = mongojs.ObjectId;


  /*
      添加问题
      info:
          title
          content
          viewNum
          resNum
          addTime
          updateTime
   */

  exports.add = function(info, cb) {
    return mongodb.open(function(err, db) {
      if (err) {
        cb(new Error("数据库连接失败"));
        return mongodb.close();
      } else {
        return db.collection("questions", function(err, collection) {
          if (err) {
            mongodb.close();
            return cb(new Error("数据库连接questions失败"));
          } else {
            return collection.insert(info, {
              safe: true
            }, function(err, question) {
              mongodb.close();
              if (err) {
                return cb(err);
              } else {
                return cb(null, question);
              }
            });
          }
        });
      }
    });
  };


  /*
      查找单个问题
      id
   */

  exports.single = function(id, cb) {
    return mongodb.open(function(err, db) {
      if (err) {
        return cb(new Error(err));
      } else {
        return db.collection("questions", function(err, collection) {
          if (err) {
            mongodb.close();
            return cb(new Error(err));
          } else {
            return collection.findOne({
              _id: ObjectId(id)
            }, function(err, question) {
              mongodb.close();
              if (err) {
                return cb(new Error(err));
              } else {
                return cb(null, question);
              }
            });
          }
        });
      }
    });
  };


  /*
      获取所有问题
   */

  exports.all = function(cb) {
    return mongodb.open(function(err, db) {
      if (err) {
        return cb(new Error(err));
      } else {
        return db.collection("questions", function(err, collection) {
          if (err) {
            mongodb.close();
            return cb(new Error(err));
          } else {
            return collection.find().toArray(function(err, items) {
              mongodb.close();
              if (err) {
                return cb(new Error(err));
              } else {
                return cb(null, items);
              }
            });
          }
        });
      }
    });
  };

}).call(this);

//# sourceMappingURL=dbQuestion.map
