// Generated by CoffeeScript 1.8.0
(function() {
  var moment, resourceBll, userHelper;

  userHelper = require("../helper/userHelper");

  resourceBll = require("../Bll/resourceBll");

  moment = require("moment");

  moment.lang("zh-cn");


  /*
  mvc配置
  @type {{}}
   */

  exports.$mvcConfig = {
    route: {
      single: {
        path: "/resource/:id",
        httpVerbs: ["get"]
      }
    }
  };


  /*
      主页
   */

  exports.index = function(req, res) {
    return resourceBll.all(function(err, items) {
      if (err) {
        return res.send({
          code: 1,
          message: err.message
        });
      } else {
        items.map(function(item) {
          return item.addTime = moment(item.addTime).fromNow();
        });
        console.log(items);
        return res.render("index", {
          loopResource: true,
          items: items,
          isLogin: userHelper.isLogin(req, res)
        });
      }
    });
  };


  /*
      add resource
   */

  exports.add_POST_GET = function(req, res) {
    var info;
    if (req.method === 'GET') {
      return res.render("add");
    } else {
      info = {
        title: req.body.title,
        content: req.body.content || "",
        filePath: req.body.path || "",
        type: req.body.type,
        imagePath: req.body.imagePath
      };
      return resourceBll.add(info, function(err, source) {
        if (err) {
          return res.send({
            code: 1,
            message: err.message
          });
        } else {
          return res.send({
            code: 0,
            message: 'ok',
            source: source
          });
        }
      });
    }
  };


  /*
      获取单个资源
   */

  exports.single = function(req, res) {
    var id;
    id = req.params.id;
    return resourceBll.single(id, function(err, source) {
      var type;
      if (err) {
        return res.send({
          code: 1,
          message: err.message
        });
      } else {
        type = source.type;
        source.addTime = moment(source.addTime).fromNow();
        console.log(source);
        if (type === 'pdf') {
          return res.render("single_pdf", {
            isLogin: userHelper.isLogin(req, res),
            source: source
          });
        } else {
          return res.render("single_text", {
            isLogin: userHelper.isLogin(req, res),
            source: source
          });
        }
      }
    });
  };

}).call(this);

//# sourceMappingURL=resource.js.map
